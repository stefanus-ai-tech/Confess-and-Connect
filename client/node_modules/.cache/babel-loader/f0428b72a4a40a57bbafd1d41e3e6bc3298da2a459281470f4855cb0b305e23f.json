{"ast":null,"code":"// client/src/App.js\nimport React,{useState}from\"react\";import io from\"socket.io-client\";import RoleSelection from\"./components/RoleSelection\";import ChatWindow from\"./components/ChatWindow\";import{createTheme,ThemeProvider}from\"@mui/material/styles\";import{CssBaseline,CircularProgress,Typography,Box}from\"@mui/material\";// Connect to the backend server\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io();// Automatically connects to the current host\n// Define your theme here\nconst theme=createTheme({palette:{mode:\"dark\",primary:{main:\"#1976d2\"},error:{main:\"#d32f2f\"},background:{default:\"#121212\",paper:\"#1e1e1e\"}}});function App(){const[role,setRole]=useState(null);const[matched,setMatched]=useState(false);const[chatRole,setChatRole]=useState(null);const[roomId,setRoomId]=useState(null);const[error,setError]=useState(\"\");const selectRole=selectedRole=>{setRole(selectedRole);socket.emit(\"select_role\",selectedRole);};// Listen for the 'matched' event from the server\nsocket.on(\"matched\",data=>{setChatRole(data.role);setRoomId(data.roomId);setMatched(true);});// Listen for error messages from the server\nsocket.on(\"error_message\",msg=>{setError(msg);});// Listen for when the confession is burned\nsocket.on(\"confession_burned\",()=>{setMatched(false);setRoomId(null);setChatRole(null);// Optionally, notify the user or redirect them\n});// Listen for participant disconnection\nsocket.on(\"participant_disconnected\",()=>{setMatched(false);setRoomId(null);setChatRole(null);// Optionally, notify the user\nalert(\"Your chat partner has disconnected.\");});return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),!role?/*#__PURE__*/_jsx(RoleSelection,{selectRole:selectRole}):!matched?/*#__PURE__*/_jsxs(Box,{sx:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",height:\"100vh\",color:\"#fff\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Waiting for a match...\"}),/*#__PURE__*/_jsx(CircularProgress,{color:\"error\"})]}):/*#__PURE__*/_jsx(ChatWindow,{socket:socket,role:chatRole,roomId:roomId,onBurnConfession:()=>{// Handle actions after burning confession if needed\n}}),error&&/*#__PURE__*/_jsx(Box,{sx:{position:\"fixed\",bottom:20,left:\"50%\",transform:\"translateX(-50%)\",bgcolor:\"error.main\",color:\"#fff\",px:2,py:1,borderRadius:\"4px\"},children:error})]});}export default App;","map":{"version":3,"names":["React","useState","io","RoleSelection","ChatWindow","createTheme","ThemeProvider","CssBaseline","CircularProgress","Typography","Box","jsx","_jsx","jsxs","_jsxs","socket","theme","palette","mode","primary","main","error","background","default","paper","App","role","setRole","matched","setMatched","chatRole","setChatRole","roomId","setRoomId","setError","selectRole","selectedRole","emit","on","data","msg","alert","children","sx","display","flexDirection","alignItems","justifyContent","height","color","variant","gutterBottom","onBurnConfession","position","bottom","left","transform","bgcolor","px","py","borderRadius"],"sources":["/home/adri/Documents/confessTest/confess-and-connect/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState } from \"react\";\nimport io from \"socket.io-client\";\nimport RoleSelection from \"./components/RoleSelection\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { CssBaseline, CircularProgress, Typography, Box } from \"@mui/material\";\n\n// Connect to the backend server\nconst socket = io(); // Automatically connects to the current host\n\n// Define your theme here\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#1976d2\",\n    },\n    error: {\n      main: \"#d32f2f\",\n    },\n    background: {\n      default: \"#121212\",\n      paper: \"#1e1e1e\",\n    },\n  },\n});\n\nfunction App() {\n  const [role, setRole] = useState(null);\n  const [matched, setMatched] = useState(false);\n  const [chatRole, setChatRole] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const selectRole = (selectedRole) => {\n    setRole(selectedRole);\n    socket.emit(\"select_role\", selectedRole);\n  };\n\n  // Listen for the 'matched' event from the server\n  socket.on(\"matched\", (data) => {\n    setChatRole(data.role);\n    setRoomId(data.roomId);\n    setMatched(true);\n  });\n\n  // Listen for error messages from the server\n  socket.on(\"error_message\", (msg) => {\n    setError(msg);\n  });\n\n  // Listen for when the confession is burned\n  socket.on(\"confession_burned\", () => {\n    setMatched(false);\n    setRoomId(null);\n    setChatRole(null);\n    // Optionally, notify the user or redirect them\n  });\n\n  // Listen for participant disconnection\n  socket.on(\"participant_disconnected\", () => {\n    setMatched(false);\n    setRoomId(null);\n    setChatRole(null);\n    // Optionally, notify the user\n    alert(\"Your chat partner has disconnected.\");\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {!role ? (\n        <RoleSelection selectRole={selectRole} />\n      ) : !matched ? (\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100vh\",\n            color: \"#fff\",\n          }}\n        >\n          <Typography variant=\"h5\" gutterBottom>\n            Waiting for a match...\n          </Typography>\n          <CircularProgress color=\"error\" />\n        </Box>\n      ) : (\n        <ChatWindow\n          socket={socket}\n          role={chatRole}\n          roomId={roomId}\n          onBurnConfession={() => {\n            // Handle actions after burning confession if needed\n          }}\n        />\n      )}\n      {/* Error Notification */}\n      {error && (\n        <Box\n          sx={{\n            position: \"fixed\",\n            bottom: 20,\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            bgcolor: \"error.main\",\n            color: \"#fff\",\n            px: 2,\n            py: 1,\n            borderRadius: \"4px\",\n          }}\n        >\n          {error}\n        </Box>\n      )}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}