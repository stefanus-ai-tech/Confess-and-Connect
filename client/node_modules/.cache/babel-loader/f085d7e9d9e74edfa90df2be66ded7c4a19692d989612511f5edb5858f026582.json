{"ast":null,"code":"var _jsxFileName = \"/home/adri/Documents/confessTest/confess-and-connect/client/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n// client/src/App.js\nimport React, { useState } from \"react\";\nimport io from \"socket.io-client\";\nimport RoleSelection from \"./components/RoleSelection\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { CssBaseline } from \"@mui/material\";\n\n// Connect to the backend server (same origin)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(); // Automatically connects to the current host\n\n// Define a custom theme with black and red palette\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n    // Enable dark mode\n    primary: {\n      main: \"#d32f2f\" // Red color\n    },\n    secondary: {\n      main: \"#1976d2\" // Blue color (can be adjusted as needed)\n    },\n    background: {\n      default: \"#121212\",\n      // Dark background\n      paper: \"#1e1e1e\" // Slightly lighter dark for paper elements\n    },\n    text: {\n      primary: \"#ffffff\",\n      // White text\n      secondary: \"#b0b0b0\" // Grey text\n    }\n  },\n  typography: {\n    fontFamily: \"Roboto, Arial, sans-serif\"\n  }\n});\nfunction App() {\n  _s();\n  const [role, setRole] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n  const selectRole = (selectedRole, enteredRoomId) => {\n    setRole(selectedRole);\n    setRoomId(enteredRoomId);\n    socket.emit(\"join_room\", {\n      roomId: enteredRoomId,\n      role: selectedRole\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), !role ? /*#__PURE__*/_jsxDEV(RoleSelection, {\n      selectRole: selectRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChatWindow, {\n      socket: socket,\n      role: role,\n      onBurnConfession: () => {\n        // Optional: Handle actions after burning confession\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xOnxBQXIBpXn8BUoxz8VUHcNGiY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","io","RoleSelection","ChatWindow","createTheme","ThemeProvider","CssBaseline","jsxDEV","_jsxDEV","socket","theme","palette","mode","primary","main","secondary","background","default","paper","text","typography","fontFamily","App","_s","role","setRole","roomId","setRoomId","selectRole","selectedRole","enteredRoomId","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","onBurnConfession","_c","$RefreshReg$"],"sources":["/home/adri/Documents/confessTest/confess-and-connect/client/src/App.js"],"sourcesContent":["// src/App.js\n// client/src/App.js\nimport React, { useState } from \"react\";\nimport io from \"socket.io-client\";\nimport RoleSelection from \"./components/RoleSelection\";\nimport ChatWindow from \"./components/ChatWindow\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { CssBaseline } from \"@mui/material\";\n\n// Connect to the backend server (same origin)\nconst socket = io(); // Automatically connects to the current host\n\n// Define a custom theme with black and red palette\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\", // Enable dark mode\n    primary: {\n      main: \"#d32f2f\", // Red color\n    },\n    secondary: {\n      main: \"#1976d2\", // Blue color (can be adjusted as needed)\n    },\n    background: {\n      default: \"#121212\", // Dark background\n      paper: \"#1e1e1e\", // Slightly lighter dark for paper elements\n    },\n    text: {\n      primary: \"#ffffff\", // White text\n      secondary: \"#b0b0b0\", // Grey text\n    },\n  },\n  typography: {\n    fontFamily: \"Roboto, Arial, sans-serif\",\n  },\n});\n\nfunction App() {\n  const [role, setRole] = useState(null);\n  const [roomId, setRoomId] = useState(null);\n\n  const selectRole = (selectedRole, enteredRoomId) => {\n    setRole(selectedRole);\n    setRoomId(enteredRoomId);\n    socket.emit(\"join_room\", { roomId: enteredRoomId, role: selectedRole });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      {!role ? (\n        <RoleSelection selectRole={selectRole} />\n      ) : (\n        <ChatWindow\n          socket={socket}\n          role={role}\n          onBurnConfession={() => {\n            // Optional: Handle actions after burning confession\n          }}\n        />\n      )}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGR,EAAE,CAAC,CAAC,CAAC,CAAC;;AAErB;AACA,MAAMS,KAAK,GAAGN,WAAW,CAAC;EACxBO,OAAO,EAAE;IACPC,IAAI,EAAE,MAAM;IAAE;IACdC,OAAO,EAAE;MACPC,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDC,SAAS,EAAE;MACTD,IAAI,EAAE,SAAS,CAAE;IACnB,CAAC;IACDE,UAAU,EAAE;MACVC,OAAO,EAAE,SAAS;MAAE;MACpBC,KAAK,EAAE,SAAS,CAAE;IACpB,CAAC;IACDC,IAAI,EAAE;MACJN,OAAO,EAAE,SAAS;MAAE;MACpBE,SAAS,EAAE,SAAS,CAAE;IACxB;EACF,CAAC;EACDK,UAAU,EAAE;IACVC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAM4B,UAAU,GAAGA,CAACC,YAAY,EAAEC,aAAa,KAAK;IAClDL,OAAO,CAACI,YAAY,CAAC;IACrBF,SAAS,CAACG,aAAa,CAAC;IACxBrB,MAAM,CAACsB,IAAI,CAAC,WAAW,EAAE;MAAEL,MAAM,EAAEI,aAAa;MAAEN,IAAI,EAAEK;IAAa,CAAC,CAAC;EACzE,CAAC;EAED,oBACErB,OAAA,CAACH,aAAa;IAACK,KAAK,EAAEA,KAAM;IAAAsB,QAAA,gBAC1BxB,OAAA,CAACF,WAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACd,CAACZ,IAAI,gBACJhB,OAAA,CAACN,aAAa;MAAC0B,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzC5B,OAAA,CAACL,UAAU;MACTM,MAAM,EAAEA,MAAO;MACfe,IAAI,EAAEA,IAAK;MACXa,gBAAgB,EAAEA,CAAA,KAAM;QACtB;MAAA;IACA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEpB;AAACb,EAAA,CA1BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}